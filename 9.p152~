ツェラーの公式を使って曜日を求めるプログラム
N = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
Day = ["日","月","火","水","木","金","土"]
y = int(input("年を入力してください"))
m = int(input("月を入力してください"))
d = int(input("日を入力してください"))
if m <= 2:
    y = y - 1
    m = m + 12
w=(y+int(y/4)-int(y/100)+int(y/400)+int((13*m+8)/5)+d)%7
print(str(Day[w]) + "曜日です")


線形探索：データと探している値を2つずつ比較して探していく
Data = [871, 640, 982, 32, 365, 57, 349, 143,296, 106, 661, 249, 431, 918, 110, 759]
a = int(input("探す数を入力してください: "))
i = 1
for n in Data:
    if n == a:
        print(str(i) + "番目のデータで見つけました")
        break
    i = i + 1
if i > len(Data):
    print("見つかりませんでした")
実行すると
探す数を入力してください: 57
6番目のデータで見つけました
...
探す数を入力してください: 99999
見つかりませんでした


データが順序よく並んでいれば2分探索効果的
2分探索：1,2,3,4,5,6,7,8,9の中で8を探す。まず真ん中をめくると5．
データは順序よく並んでるから8は右半分にあるはず。だから右半分の真ん中をめくる...

Data = [32, 57, 106, 110, 143, 249, 196, 349, 365, 431, 640, 661, 759, 871, 918, 982]
a = int(input("探す数を入力してください: "))
i = 1
left = 0
right = len(Data) - 1
while left <= right:
    mid = int((left+right) / 2)
    print("Data[" + str(mid) + "]を調べています")
    if Data[mid] == a:
        print(str(mid + 1) + "番目のデータで見つけました")
        break
    elif a < Data[mid]:
        right = mid - 1
    else:                  # Data[mid] < a
        left = mid + 1
if left > right:
    print("見つかりませんでした")
    
実行すると
探す数を入力してください: 33
Data[7]を調べています
Data[3]を調べています
Data[1]を調べています
Data[0]を調べています
見つかりませんでした
...
探す数を入力してください: 918
Data[7]を調べています
Data[11]を調べています
Data[13]を調べています
Data[14]を調べています
15番目のデータで見つけました
