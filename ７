コンピューターで行う計算は順次、分岐(判断)、反復(繰り返し)の3つの構造で記述できることが知られている

１．順次
3 + 5 × 8 を見ていく
(3 + 5) × 8の計算
>>> a = 3 + 5
>>> a = a * 8
>>> print(a)
64
3 + (5 × 8)
>>> a = 5 * 8
>>> a = 3 + a
>>> print(a)
43
コンピューターも四則演算の計算の順番を守る
>>> print(3 + 5 * 8)
43

２．分岐構造
色々な計算を1つのプログラムで行うためには、順に実行するだけでなく、その時点の計算過程などを見て場合分けしなければいけない。
t = int(input("最高気温を入力してください"))
if t >= 25:
    print("夏日です")
これを実行すると
=============== RESTART: C:/Users/torio/Desktop/計算の科学と手引き/7.2.py ===============
最高気温を入力してください25
夏日です
>>> 
=============== RESTART: C:/Users/torio/Desktop/計算の科学と手引き/7.2.py ===============
最高気温を入力してください2

else節を加えて条件が成り立たなかったときのことを考える
t = int(input("最高気温を入力してください"))
if t >= 25:
    print("夏日です")
else:
    print("暑くありません")
実行すると    
=============== RESTART: C:/Users/torio/Desktop/計算の科学と手引き/7.2.py ===============
最高気温を入力してください6
暑くありません

また、elif節を使うことで多分岐の構造を書くことが出来る
t = int(input("最高気温を入力してください"))
if t >= 30:
    print("真夏日です")
elif t >= 25:
    print("夏日です")
else:
    print("暑くありません")
実行すると    
=============== RESTART: C:/Users/torio/Desktop/計算の科学と手引き/7.2.py ===============
最高気温を入力してください33
真夏日です  

３．反復構造
a = 0
i = 1
while i <= 10:　＃while 条件:
    print(str(i) + "を加算") ＃以下繰り返す処理　str()関数でiの値を文字列に変換している
    a = a + i
    i = i + 1
print("計算結果:" + str(a))
実行すると
=============== RESTART: C:/Users/torio/Desktop/計算の科学と手引き/7.2.py ===============
1を加算
2を加算
3を加算
4を加算
5を加算
6を加算
7を加算
8を加算
9を加算
10を加算
計算結果:55

for 変数 in データの集まり:
   繰り返す処理
a = 0
for i in range(1,11):
    print(str(i) + "を加算")
    a = a + i
print("計算結果:" + str(a))
実行すると
1を加算
2を加算
3を加算
4を加算
5を加算
6を加算
7を加算
8を加算
9を加算
10を加算
計算結果:55
range関数の引数は他の値や変数、式などを自由に変更できる
2から10までの偶数の和を求めるプログラム
a = 0
for i in range(2,11,2):
    print(str(i) + "を加算")
    a = a + i
print("計算結果:" + str(a))
実行すると
2を加算
4を加算
6を加算
8を加算
10を加算
計算結果:30

n = int(input("nを入力してください:"))
a = 0
for i in range(1,n+1):
    a = a + i
print("1から" + str(n) + "までの和は" + str(a))
実行すると
nを入力してください:4
1から4までの和は10

階乗を求めるプログラム
n = int(input("nを入力してください:"))
a = 1
for i in range(n, 0, -1):
    a = a * i
print(str(n) + "の階乗は" + str(a))
実行すると
nを入力してください:10
10の階乗は3628800

三角形の面積を求めるプログラム
b = int(input("底辺：　"))
h = int(input("高さ：　"))
print(b * h /2)
実行すると
底辺：　4
高さ：　3
6.0

float()関数で変換すれば実数の値も受け付けることが出来る
b = float(input("底辺：　"))
h = float(input("高さ：　"))
print(b * h /2.0)
実行すると
底辺：　5.5
高さ：　3.2
8.8

ヘロンの公式を使って三角形の面積を求めるプログラム
import math
a = float(input("1つ目の辺の長さを入力してください: "))
b = float(input("2つ目の辺の長さを入力してください: "))
c = float(input("3つ目の辺の長さを入力してください: "))
s = (a + b + c) / 2
print(math.sqrt(s*(s-a)*(s-b)*(s-c)))
実行すると
1つ目の辺の長さを入力してください: 3
2つ目の辺の長さを入力してください: 4
3つ目の辺の長さを入力してください: 5
6.0
